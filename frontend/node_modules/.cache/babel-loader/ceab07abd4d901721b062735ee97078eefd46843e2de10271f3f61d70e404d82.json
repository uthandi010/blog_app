{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'ShowBlogpost',\n  computed: {\n    ...mapGetters('auth', ['getUser']),\n    userToken() {\n      return this.getUser.user_token;\n    },\n    user() {\n      return this.getUser.current_user;\n    }\n  },\n  data() {\n    return {\n      blogPost: {},\n      comments: [],\n      body: '',\n      currentUser: {},\n      isSuperUser: false\n    };\n  },\n  created() {\n    this.fetchBlogPost();\n  },\n  methods: {\n    async fetchBlogPost() {\n      try {\n        const response = await axios.get(`http://127.0.0.1:3000/api/v1/blog_posts/${this.$route.params.id}`, {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        });\n        this.blogPost = response.data;\n        this.comments = response.data.comments;\n      } catch (error) {\n        console.error('Error fetching blog post:', error);\n      }\n    },\n    async deletePost() {\n      try {\n        await axios.delete(`http://127.0.0.1:3000/api/v1/blog_posts/${this.$route.params.id}`, {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        });\n        this.$router.push('/blogpost');\n      } catch (error) {\n        console.error('Error deleting blog post:', error);\n      }\n    },\n    async addComment() {\n      try {\n        console.log(this.newComment.content);\n        const response = await axios.post(`http://127.0.0.1:3000/api/v1/comments`, {\n          comment: {\n            body: this.body,\n            blog_post_id: this.blogPost.post.id\n          }\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        });\n        this.comments.push(response.data);\n        this.newComment.content = '';\n      } catch (error) {\n        console.error('Error adding comment:', error);\n      }\n    },\n    async addReply(parentId) {\n      try {\n        const response = await axios.post(`http://127.0.0.1:3000/api/v1/comments`, {\n          parent_id: parentId,\n          body: this.newReply.content,\n          blog_post_id: this.blogPost.post.id\n        }, {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        });\n        const parentComment = this.comments.find(comment => comment.id === parentId);\n        parentComment.replies.push(response.data);\n        this.newReply.content = '';\n      } catch (error) {\n        console.error('Error adding reply:', error);\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.delete(`http://127.0.0.1:3000/api/v1/comments/${commentId}`, {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        });\n        this.comments = this.comments.filter(comment => comment.id !== commentId);\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","name","computed","userToken","getUser","user_token","user","current_user","data","blogPost","comments","body","currentUser","isSuperUser","created","fetchBlogPost","methods","response","get","$route","params","id","headers","error","console","deletePost","delete","$router","push","addComment","log","newComment","content","post","comment","blog_post_id","addReply","parentId","parent_id","newReply","parentComment","find","replies","deleteComment","commentId","filter"],"sources":["/Users/francium/app/frontend/src/components/blogpost/ShowBlogpost.vue"],"sourcesContent":["<template>\n    <div class=\"blogpost-details\" v-if=\"Object.keys(blogPost).length != 0\">\n        <img :src=\"blogPost.image_url\" :alt=\"blogPost.post.title\" class=\"blog-image\">\n        <div class=\"blog-content\">\n            <div class=\"content-row\">\n                <span class=\"label\">Title</span>\n                <h3 class=\"blog-title\">{{ blogPost.post.title }}</h3>\n            </div>\n            <div class=\"content-row\">\n                <span class=\"label\">Author</span>\n                <p class=\"blog-author\">{{ blogPost.user.firstname }} {{ blogPost.user.lastname }}</p>\n            </div>\n            <div class=\"content-row description\">\n                <span class=\"label\">Description</span>\n                <p class=\"blog-description\">{{ blogPost.post.description }}</p>\n            </div>\n            <div class=\"content-row\">\n                <router-link :to=\"`/blogpost/edit/${blogPost.post.id}`\" class=\"nav-button auth-button\">Edit</router-link>\n                <button class=\"nav-button auth-button\" @click=\"deletePost\">Delete</button>\n                <router-link :to=\"`/blogpost`\" class=\"nav-button auth-button\">Back</router-link>\n            </div>\n            <div id=\"comments\">\n                <h2>Comments</h2>\n\n                <!-- Add Comment Form -->\n                <form @submit.prevent=\"addComment\" class=\"add-comment-form\">\n                <div class=\"form-group\">\n\n                    <textarea\n                    v-model=\"body\"\n                    placeholder=\"Write a comment...\"\n                    class=\"form-control\"\n                    rows=\"2\"\n                    required\n                    ></textarea>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-sm\">Add Comment</button>\n                </form>\n                <hr />\n\n                <!-- Comments List -->\n                <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment\">\n                <p>\n                    <strong>{{ comment.user.first_name }}:</strong> {{ comment.content }}\n                </p>\n                \n                <div v-if=\"isEditable(comment)\">\n                    <button @click=\"editComment(comment)\" class=\"btn btn-secondary btn-sm\">Edit</button>\n                    <button @click=\"deleteComment(comment)\" class=\"btn btn-danger btn-sm\">Delete</button>\n                </div>\n                <!-- Add Reply Form -->\n                <form @submit.prevent=\"addReply(comment.id)\" class=\"reply-form\">\n                    <div class=\"form-group\">\n                    <textarea\n                        v-model=\"body\"\n                        placeholder=\"Write a reply...\"\n                        class=\"form-control\"\n                        rows=\"1\"\n                        required\n                    ></textarea>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-info btn-sm\">Reply</button>\n                </form>\n                <!-- Replies -->\n                <div class=\"replies\">\n                    <div v-for=\"reply in comment.replies\" :key=\"reply.id\" class=\"reply\">\n                    <p>\n                        <strong>{{ reply.user.first_name }}:</strong> {{ reply.content }}\n                    </p>\n                    \n                    <div v-if=\"isEditable(reply)\">\n                        <button @click=\"editComment(reply)\" class=\"btn btn-secondary btn-sm\">Edit</button>\n                        <button @click=\"deleteComment(reply)\" class=\"btn btn-danger btn-sm\">Delete</button>\n                    </div>\n                    </div>\n                </div>\n\n                \n                <hr/>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nexport default {\n    name: 'ShowBlogpost',\n    computed: {\n        ...mapGetters('auth', ['getUser']),\n        userToken() {\n            return this.getUser.user_token;\n        },\n        user() {\n            return this.getUser.current_user;\n        }\n    },\n    data() {\n        return {\n            blogPost: {},\n            comments: [],\n            body: '', \n            currentUser: {}, \n            isSuperUser: false \n        };\n    },\n    created() {\n        this.fetchBlogPost();\n    },\n    methods: {\n        async fetchBlogPost() {\n            try {\n                const response = await axios.get(`http://127.0.0.1:3000/api/v1/blog_posts/${this.$route.params.id}`, {\n                    headers: {\n                        'Authorization': `Bearer ${this.userToken}`\n                    }\n                });\n                this.blogPost = response.data;\n                this.comments = response.data.comments; \n            } catch (error) {\n                console.error('Error fetching blog post:', error);\n            }\n        },\n        async deletePost() {\n            try {\n                await axios.delete(`http://127.0.0.1:3000/api/v1/blog_posts/${this.$route.params.id}`, {\n                    headers: {\n                        'Authorization': `Bearer ${this.userToken}`\n                    }\n                });\n                this.$router.push('/blogpost');\n            } catch (error) {\n                console.error('Error deleting blog post:', error);\n            }\n        },\n        async addComment() {\n            try {\n                console.log(this.newComment.content);\n                const response = await axios.post(`http://127.0.0.1:3000/api/v1/comments`, {\n                    comment: {\n                        body: this.body,\n                        blog_post_id: this.blogPost.post.id \n                                  \n                    }\n                }, {\n                    headers: {\n                        'Authorization': `Bearer ${this.userToken}`\n                    }\n                });\n                this.comments.push(response.data);\n                this.newComment.content = '';\n            } catch (error) {\n                console.error('Error adding comment:', error);\n            }\n        },\n        async addReply(parentId) {\n            try {\n                const response = await axios.post(`http://127.0.0.1:3000/api/v1/comments`, {\n                    parent_id: parentId,\n                    body: this.newReply.content,\n                    blog_post_id: this.blogPost.post.id\n                }, {\n                    headers: {\n                        'Authorization': `Bearer ${this.userToken}`\n                    }\n                });\n                const parentComment = this.comments.find(comment => comment.id === parentId);\n                parentComment.replies.push(response.data);\n                this.newReply.content = '';\n            } catch (error) {\n                console.error('Error adding reply:', error);\n            }\n        },\n        async deleteComment(commentId) {\n            try {\n                await axios.delete(`http://127.0.0.1:3000/api/v1/comments/${commentId}`, {\n                    headers: {\n                        'Authorization': `Bearer ${this.userToken}`\n                    }\n                });\n                this.comments = this.comments.filter(comment => comment.id !== commentId);\n            } catch (error) {\n                console.error('Error deleting comment:', error);\n            }\n        },\n    }\n};\n</script>\n<style scoped>\n.blogpost-details {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n    background: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.blog-image {\n    width: 100%;\n    height: auto;\n    border-radius: 10px;\n}\n\n.blog-content {\n    padding: 20px;\n    background: linear-gradient(135deg, #c2ecd9 0%, #a8e6c9 100%);\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.content-row {\n    display: flex;\n    align-items: flex-start;\n    gap: 12px;\n}\n\n.label {\n    min-width: 90px;\n    font-weight: 600;\n    color: #2c3e50;\n    background-color: rgba(255, 255, 255, 0.7);\n    padding: 6px 12px;\n    border-radius: 6px;\n    font-size: 0.9em;\n    text-align: center;\n}\n\n.blog-title {\n    font-size: 1.3em;\n    margin: 0;\n    color: #2c3e50;\n    font-weight: 600;\n    flex: 1;\n    line-height: 1.4;\n}\n\n.blog-author {\n    font-size: 1em;\n    color: #2c3e50;\n    margin: 0;\n    flex: 1;\n    line-height: 1.8;\n}\n\n.blog-description {\n    font-size: 1em;\n    color: #2c3e50;\n    margin: 0;\n    flex: 1;\n    line-height: 1.6;\n}\n.description{\n    flex-direction: column;\n}\n\n.buttons {\n    display: flex;\n    gap: 10px;\n    margin-top: 20px;\n}\n\n.nav-button {\n    text-decoration: none;\n    padding: 10px 20px;\n    border-radius: 8px;\n    font-size: 1.1em;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    border: none;\n    cursor: pointer;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.auth-button {\n    background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);\n    color: white;\n}\n\n.auth-button:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    background: linear-gradient(135deg, #27ae60 0%, #219a52 100%);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}