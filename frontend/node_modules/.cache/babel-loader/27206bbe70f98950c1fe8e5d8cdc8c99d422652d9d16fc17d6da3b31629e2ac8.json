{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      title: '',\n      description: '',\n      image: null,\n      errors: []\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.image = event.target.files[0];\n    },\n    async submitForm() {\n      this.errors = [];\n      if (!this.image || this.image.size < 2 * 1024 * 1024 || this.image.size > 8 * 1024 * 1024) {\n        this.errors.push('Image must be a JPEG and between 2MB and 8MB.');\n        return;\n      }\n      debugger;\n      try {\n        const response = await axios.post('http://127.0.0.1:3000/api/v1/blog_posts', {\n          blog_post: {\n            title: this.title,\n            description: this.description,\n            picture: this.image\n          }\n        }, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Blog post created:', response);\n        debugger;\n        this.$router.push('/blog-posts');\n      } catch (error) {\n        this.errors.push('Failed to create blog post.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","title","description","image","errors","methods","handleFileUpload","event","target","files","submitForm","size","push","response","post","blog_post","picture","headers","console","log","$router","error"],"sources":["/Users/francium/app/frontend/src/components/blogpost/NewBlogpost.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h1>New Blog Post</h1>\n        <div v-if=\"errors.length\">\n            <h3 class=\"text-danger\">\n                {{ errors.join(', ') }}\n            </h3>\n        </div>\n        <form @submit.prevent=\"submitForm\">\n            <div>\n                <label for=\"title\">Title</label>\n                <input type=\"text\" v-model=\"title\" required />\n            </div><br>\n            <div>\n                <label for=\"description\">Description</label>\n                <textarea v-model=\"description\" required></textarea>\n            </div><br>\n            <div>\n                <label for=\"image\">Upload Image (JPEG, 2MB-8MB)</label>\n                <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/jpeg\" class=\"form-control\" />\n            </div><br>\n            <div>\n                <button type=\"submit\">Create Blog Post</button>\n            </div>\n            <router-link to=\"/\" class=\"btn btn-secondary\">Back to Blog Posts</router-link>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            title: '',\n            description: '',\n            image: null,\n            errors: []\n        };\n    },\n    methods: {\n        handleFileUpload(event) {\n            this.image = event.target.files[0];\n        },\n        async submitForm() {\n            this.errors = [];\n            if (!this.image || this.image.size < 2 * 1024 * 1024 || this.image.size > 8 * 1024 * 1024) {\n                this.errors.push('Image must be a JPEG and between 2MB and 8MB.');\n                return;\n            }\ndebugger\n            try {\n                const response = await axios.post('http://127.0.0.1:3000/api/v1/blog_posts', {\n                    blog_post: {\n                        title: this.title,\n                        description: this.description,\n                        picture: this.image\n                    }\n                }, \n                {\n                    headers: {\n                       'Content-Type': 'multipart/form-data'\n                       \n                    }\n                });\n                console.log('Blog post created:', response);\n                debugger\n                this.$router.push('/blog-posts');\n            } catch (error) {\n                this.errors.push('Failed to create blog post.');\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.container {\n    background-color:#c2ecd9;\n    padding: 2rem;\n    border-radius: 20px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 300px;\n    margin: 0 auto;\n}\n\nh1 {\n    text-align: center;\n    color: #333;\n    margin-bottom: 1.5rem;\n}\n\ninput, textarea {\n    width: 100%;\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 0.5rem;\n    color: #000000;\n    font-size: 1.2rem;\n}\n\nbutton {\n    width: 100%;\n    padding: 0.75rem;\n    background-color: #1877f2;\n    color: #fff;\n    border: none;\n    border-radius: 4px;\n    font-size: 1rem;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n    background-color: #00935b;\n}\n\n.text-danger {\n    color: red;\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 15px;\n}\n</style>"],"mappings":";AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,gBAAgBA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACJ,KAAI,GAAII,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI,CAACN,MAAK,GAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAACD,KAAI,IAAK,IAAI,CAACA,KAAK,CAACQ,IAAG,GAAI,IAAI,IAAG,GAAI,IAAG,IAAK,IAAI,CAACR,KAAK,CAACQ,IAAG,GAAI,IAAI,IAAG,GAAI,IAAI,EAAE;QACvF,IAAI,CAACP,MAAM,CAACQ,IAAI,CAAC,+CAA+C,CAAC;QACjE;MACJ;MACZ;MACY,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,yCAAyC,EAAE;UACzEC,SAAS,EAAE;YACPd,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;YAC7Bc,OAAO,EAAE,IAAI,CAACb;UAClB;QACJ,CAAC,EACD;UACIc,OAAO,EAAE;YACN,cAAc,EAAE;UAEnB;QACJ,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,QAAQ,CAAC;QAC3C;QACA,IAAI,CAACO,OAAO,CAACR,IAAI,CAAC,aAAa,CAAC;MACpC,EAAE,OAAOS,KAAK,EAAE;QACZ,IAAI,CAACjB,MAAM,CAACQ,IAAI,CAAC,6BAA6B,CAAC;MACnD;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}