{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { useStore } from 'vuex';\nimport SignIn from '../components/users/SignIn.vue';\nimport SignUp from '../components/users/SignUp.vue';\nimport BodyElement from '../components/blogpost/BodyElement.vue';\nconst routes = [{\n  path: '/sign-in',\n  name: 'SignIn',\n  component: SignIn\n}, {\n  path: '/sign-up',\n  name: 'SignUp',\n  component: SignUp\n}, {\n  path: '/',\n  name: 'BodyElement',\n  component: BodyElement\n}, {\n  path: '/new-blog-post',\n  name: 'NewBlogPost',\n  component: NewBlogPost // Add the NewBlogPost route\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: BodyElement\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, _, next) => {\n  const store = useStore();\n  const userToken = store.state.auth.user_token;\n  if (userToken) {\n    if (to.path === '/sign-in' || to.path === '/sign-up') {\n      return next({\n        path: '/'\n      });\n    }\n  } else {\n    if (to.path !== '/sign-in' && to.path !== '/sign-up') {\n      return next({\n        path: '/sign-in'\n      });\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useStore","SignIn","SignUp","BodyElement","routes","path","name","component","NewBlogPost","router","history","beforeEach","to","_","next","store","userToken","state","auth","user_token"],"sources":["/Users/francium/app/frontend/src/routes/route.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport { useStore } from 'vuex'; \nimport SignIn from '../components/users/SignIn.vue';\nimport SignUp from '../components/users/SignUp.vue';\nimport BodyElement from '../components/blogpost/BodyElement.vue';\n\nconst routes = [\n    {\n        path: '/sign-in',\n        name: 'SignIn',\n        component: SignIn,\n    },\n    {\n        path: '/sign-up',\n        name: 'SignUp',\n        component: SignUp,\n    },\n    {\n        path: '/',\n        name: 'BodyElement',\n        component: BodyElement,\n    },\n    {\n        path: '/new-blog-post',\n        name: 'NewBlogPost',\n        component: NewBlogPost, // Add the NewBlogPost route\n    },\n    {\n        path: '/:pathMatch(.*)*', \n        name: 'NotFound',\n        component: BodyElement, \n    },\n\n];\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n});\n\nrouter.beforeEach((to, _, next) => {\n    const store = useStore(); \n    const userToken = store.state.auth.user_token; \n\n    if (userToken) {\n        if (to.path === '/sign-in' || to.path === '/sign-up' ){\n            return next({ path: '/' });\n        }\n    } \n    else {\n        if (to.path !== '/sign-in' && to.path !== '/sign-up') {\n            return next({ path: '/sign-in' });\n        }\n    }\n\n    next(); \n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,WAAW,MAAM,wCAAwC;AAEhE,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEL;AACf,CAAC,EACD;EACIG,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEJ;AACf,CAAC,EACD;EACIE,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEC,WAAW,CAAE;AAC5B,CAAC,EACD;EACIH,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ;AACf,CAAC,CAEJ;AAED,MAAMM,MAAM,GAAGX,YAAY,CAAC;EACxBY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAC3BK;AACJ,CAAC,CAAC;AAEFK,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,CAAC,EAAEC,IAAI,KAAK;EAC/B,MAAMC,KAAK,GAAGf,QAAQ,CAAC,CAAC;EACxB,MAAMgB,SAAS,GAAGD,KAAK,CAACE,KAAK,CAACC,IAAI,CAACC,UAAU;EAE7C,IAAIH,SAAS,EAAE;IACX,IAAIJ,EAAE,CAACP,IAAI,KAAK,UAAU,IAAIO,EAAE,CAACP,IAAI,KAAK,UAAU,EAAE;MAClD,OAAOS,IAAI,CAAC;QAAET,IAAI,EAAE;MAAI,CAAC,CAAC;IAC9B;EACJ,CAAC,MACI;IACD,IAAIO,EAAE,CAACP,IAAI,KAAK,UAAU,IAAIO,EAAE,CAACP,IAAI,KAAK,UAAU,EAAE;MAClD,OAAOS,IAAI,CAAC;QAAET,IAAI,EAAE;MAAW,CAAC,CAAC;IACrC;EACJ;EAEAS,IAAI,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}