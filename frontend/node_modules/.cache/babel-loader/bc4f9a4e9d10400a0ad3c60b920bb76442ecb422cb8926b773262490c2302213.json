{"ast":null,"code":"import axios from 'axios';\nconst state = () => ({\n  user: null,\n  token: '',\n  isAuthenticated: false\n});\nconst mutations = {\n  SET_USER(state, user) {\n    state.user = user;\n  },\n  SET_TOKEN(state, token) {\n    state.token = token;\n    state.isAuthenticated = !!token;\n  },\n  CLEAR_AUTH(state) {\n    state.user = null;\n    state.token = '';\n    state.isAuthenticated = false;\n  }\n};\nconst actions = {\n  async login({\n    commit\n  }, {\n    user,\n    token\n  }) {\n    commit('SET_USER', user);\n    commit('SET_TOKEN', token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  },\n  async logout({\n    commit\n  }) {\n    commit('CLEAR_AUTH');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  autoLogin({\n    commit\n  }) {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (token && user) {\n      commit('SET_TOKEN', token);\n      commit('SET_USER', user);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["axios","state","user","token","isAuthenticated","mutations","SET_USER","SET_TOKEN","CLEAR_AUTH","actions","login","commit","localStorage","setItem","JSON","stringify","logout","removeItem","autoLogin","getItem","parse","namespaced"],"sources":["/Users/francium/app/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\nconst state = () => ({\n  user: null,\n  token: '',\n  isAuthenticated: false\n})\n\nconst mutations = {\n  SET_USER(state, user) {\n    state.user = user\n  },\n  SET_TOKEN(state, token) {\n    state.token = token\n    state.isAuthenticated = !!token\n  },\n  CLEAR_AUTH(state) {\n    state.user = null\n    state.token = ''\n    state.isAuthenticated = false\n  }\n}\n\nconst actions = {\n  async login({ commit }, { user, token }) {\n    commit('SET_USER', user)\n    commit('SET_TOKEN', token)\n    localStorage.setItem('token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n  },\n  async logout({ commit }) {\n    commit('CLEAR_AUTH')\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n  },\n  autoLogin({ commit }) {\n    const token = localStorage.getItem('token')\n    const user = JSON.parse(localStorage.getItem('user'))\n    if (token && user) {\n      commit('SET_TOKEN', token)\n      commit('SET_USER', user)\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,KAAK,GAAGA,CAAA,MAAO;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,EAAE;EACTC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG;EAChBC,QAAQA,CAACL,KAAK,EAAEC,IAAI,EAAE;IACpBD,KAAK,CAACC,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDK,SAASA,CAACN,KAAK,EAAEE,KAAK,EAAE;IACtBF,KAAK,CAACE,KAAK,GAAGA,KAAK;IACnBF,KAAK,CAACG,eAAe,GAAG,CAAC,CAACD,KAAK;EACjC,CAAC;EACDK,UAAUA,CAACP,KAAK,EAAE;IAChBA,KAAK,CAACC,IAAI,GAAG,IAAI;IACjBD,KAAK,CAACE,KAAK,GAAG,EAAE;IAChBF,KAAK,CAACG,eAAe,GAAG,KAAK;EAC/B;AACF,CAAC;AAED,MAAMK,OAAO,GAAG;EACd,MAAMC,KAAKA,CAAC;IAAEC;EAAO,CAAC,EAAE;IAAET,IAAI;IAAEC;EAAM,CAAC,EAAE;IACvCQ,MAAM,CAAC,UAAU,EAAET,IAAI,CAAC;IACxBS,MAAM,CAAC,WAAW,EAAER,KAAK,CAAC;IAC1BS,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;IACpCS,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;EACpD,CAAC;EACD,MAAMc,MAAMA,CAAC;IAAEL;EAAO,CAAC,EAAE;IACvBA,MAAM,CAAC,YAAY,CAAC;IACpBC,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EACDC,SAASA,CAAC;IAAEP;EAAO,CAAC,EAAE;IACpB,MAAMR,KAAK,GAAGS,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMjB,IAAI,GAAGY,IAAI,CAACM,KAAK,CAACR,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAIhB,KAAK,IAAID,IAAI,EAAE;MACjBS,MAAM,CAAC,WAAW,EAAER,KAAK,CAAC;MAC1BQ,MAAM,CAAC,UAAU,EAAET,IAAI,CAAC;IAC1B;EACF;AACF,CAAC;AAED,eAAe;EACbmB,UAAU,EAAE,IAAI;EAChBpB,KAAK;EACLI,SAAS;EACTI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}