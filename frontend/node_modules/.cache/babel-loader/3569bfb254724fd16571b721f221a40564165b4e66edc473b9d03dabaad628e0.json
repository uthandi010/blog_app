{"ast":null,"code":"// auth.js\nexport default {\n  namespaced: true,\n  state: {\n    current_user: {},\n    // Initial state for current user\n    user_token: \"\" // Initial state for user token\n  },\n  mutations: {\n    ADD_USER(state, user_data) {\n      state.current_user = user_data.user;\n      state.user_token = user_data.token;\n    }\n  },\n  actions: {\n    addUser({\n      commit\n    }, user_data) {\n      commit('ADD_USER', user_data);\n    }\n  },\n  getters: {\n    getUser(state) {\n      return {\n        current_user: state.current_user,\n        user_token: state.user_token\n      };\n    }\n  }\n};","map":{"version":3,"names":["namespaced","state","current_user","user_token","mutations","ADD_USER","user_data","user","token","actions","addUser","commit","getters","getUser"],"sources":["/Users/francium/app/frontend/src/store/modules/auth.js"],"sourcesContent":["// auth.js\nexport default {\n  namespaced: true,\n  state: {\n    current_user: {}, // Initial state for current user\n    user_token: \"\"    // Initial state for user token\n  },\n  mutations: {\n    ADD_USER(state, user_data) {\n      state.current_user = user_data.user;\n      state.user_token = user_data.token;\n    },\n  },\n  actions: {\n    addUser({ commit }, user_data) {\n      commit('ADD_USER', user_data);\n    },\n  },\n  getters: {\n    getUser(state) {\n      return {\n        current_user: state.current_user,\n        user_token: state.user_token\n      };\n    },\n  },\n};\n"],"mappings":"AAAA;AACA,eAAe;EACbA,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,YAAY,EAAE,CAAC,CAAC;IAAE;IAClBC,UAAU,EAAE,EAAE,CAAI;EACpB,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACJ,KAAK,EAAEK,SAAS,EAAE;MACzBL,KAAK,CAACC,YAAY,GAAGI,SAAS,CAACC,IAAI;MACnCN,KAAK,CAACE,UAAU,GAAGG,SAAS,CAACE,KAAK;IACpC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAC;MAAEC;IAAO,CAAC,EAAEL,SAAS,EAAE;MAC7BK,MAAM,CAAC,UAAU,EAAEL,SAAS,CAAC;IAC/B;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,OAAOA,CAACZ,KAAK,EAAE;MACb,OAAO;QACLC,YAAY,EAAED,KAAK,CAACC,YAAY;QAChCC,UAAU,EAAEF,KAAK,CAACE;MACpB,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}