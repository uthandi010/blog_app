{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'ShowBlogpost',\n  data() {\n    return {\n      blogPost: {},\n      comments: [],\n      newComment: '',\n      replyContent: ''\n    };\n  },\n  computed: {\n    ...mapGetters('auth', ['getUser']),\n    userToken() {\n      return this.getUser.user_token;\n    },\n    user() {\n      return this.getUser.current_user;\n    }\n  },\n  created() {\n    this.fetchBlogPost();\n  },\n  methods: {\n    async fetchBlogPost() {\n      try {\n        const response = await axios.get(`http://127.0.0.1:3000/api/v1/blog_posts/${this.$route.params.id}`, {\n          headers: {\n            Authorization: `Bearer ${this.userToken}`\n          }\n        });\n        this.blogPost = response.data;\n        this.comments = response.data.comments;\n      } catch (error) {\n        console.error('Error fetching blog post:', error);\n      }\n    },\n    async addComment() {\n      try {\n        const response = await axios.post('http://127.0.0.1:3000/api/v1/comments', {\n          body: this.newComment,\n          blog_post_id: this.blogPost.post.id\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.userToken}`\n          }\n        });\n        this.comments.push(response.data);\n        this.newComment = '';\n      } catch (error) {\n        console.error('Error adding comment:', error);\n      }\n    },\n    async addReply(parentId) {\n      try {\n        const response = await axios.post('http://127.0.0.1:3000/api/v1/comments', {\n          body: this.replyContent,\n          parent_id: parentId,\n          blog_post_id: this.blogPost.post.id\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.userToken}`\n          }\n        });\n        const parentComment = this.comments.find(comment => comment.id === parentId);\n        parentComment.replies.push(response.data);\n        this.replyContent = '';\n      } catch (error) {\n        console.error('Error adding reply:', error);\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.delete(`http://127.0.0.1:3000/api/v1/comments/${commentId}`, {\n          headers: {\n            Authorization: `Bearer ${this.userToken}`\n          }\n        });\n        this.comments = this.comments.filter(comment => comment.id !== commentId);\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n      }\n    },\n    isEditable(item) {\n      return item.user_id === this.user.id;\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","name","data","blogPost","comments","newComment","replyContent","computed","userToken","getUser","user_token","user","current_user","created","fetchBlogPost","methods","response","get","$route","params","id","headers","Authorization","error","console","addComment","post","body","blog_post_id","push","addReply","parentId","parent_id","parentComment","find","comment","replies","deleteComment","commentId","delete","filter","isEditable","item","user_id"],"sources":["/Users/francium/app/frontend/src/components/blogpost/ShowBlogpost.vue"],"sourcesContent":["<template>\n    <div class=\"blogpost-details\" v-if=\"Object.keys(blogPost).length !== 0\">\n        <img :src=\"blogPost.image_url\" :alt=\"blogPost.post.title\" class=\"blog-image\">\n        <div class=\"blog-content\">\n            <h3 class=\"blog-title\">{{ blogPost.post.title }}</h3>\n            <p class=\"blog-author\">By: {{ blogPost.user.firstname }} {{ blogPost.user.lastname }}</p>\n            <p class=\"blog-description\">{{ blogPost.post.description }}</p>\n\n            <div class=\"buttons\">\n                <router-link :to=\"`/blogpost/edit/${blogPost.post.id}`\" class=\"nav-button auth-button\">Edit</router-link>\n                <button class=\"nav-button auth-button\" @click=\"deletePost\">Delete</button>\n                <router-link to=\"/blogpost\" class=\"nav-button auth-button\">Back</router-link>\n            </div>\n\n            <div id=\"comments\">\n                <h2>Comments</h2>\n\n                <!-- Add Comment Form -->\n                <form @submit.prevent=\"addComment\" class=\"add-comment-form\">\n                    <textarea\n                        v-model=\"newComment\"\n                        placeholder=\"Write a comment...\"\n                        class=\"form-control\"\n                        rows=\"2\"\n                        required\n                    ></textarea>\n                    <button type=\"submit\" class=\"btn btn-primary btn-sm\">Add Comment</button>\n                </form>\n\n                <!-- Comments and Replies -->\n                <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment\">\n                    <p>\n                        <strong>{{ comment.user.firstname }}:</strong> {{ comment.body }}\n                    </p>\n\n                    <!-- Comment Actions -->\n                    <div v-if=\"isEditable(comment)\">\n                        <button @click=\"editComment(comment)\" class=\"btn btn-secondary btn-sm\">Edit</button>\n                        <button @click=\"deleteComment(comment.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n                    </div>\n\n                    <!-- Replies -->\n                    <div v-for=\"reply in comment.replies\" :key=\"reply.id\" class=\"reply\">\n                        <p>\n                            <strong>{{ reply.user.firstname }}:</strong> {{ reply.body }}\n                        </p>\n                        <div v-if=\"isEditable(reply)\">\n                            <button @click=\"editComment(reply)\" class=\"btn btn-secondary btn-sm\">Edit</button>\n                            <button @click=\"deleteComment(reply.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n                        </div>\n                    </div>\n\n                    <!-- Add Reply Form -->\n                    <form @submit.prevent=\"addReply(comment.id)\" class=\"reply-form\">\n                        <textarea\n                            v-model=\"replyContent\"\n                            placeholder=\"Write a reply...\"\n                            class=\"form-control\"\n                            rows=\"1\"\n                            required\n                        ></textarea>\n                        <button type=\"submit\" class=\"btn btn-info btn-sm\">Reply</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\n\nexport default {\n    name: 'ShowBlogpost',\n    data() {\n        return {\n            blogPost: {},\n            comments: [],\n            newComment: '',\n            replyContent: '',\n        };\n    },\n    computed: {\n        ...mapGetters('auth', ['getUser']),\n        userToken() {\n            return this.getUser.user_token;\n        },\n        user() {\n            return this.getUser.current_user;\n        },\n    },\n    created() {\n        this.fetchBlogPost();\n    },\n    methods: {\n        async fetchBlogPost() {\n            try {\n                const response = await axios.get(`http://127.0.0.1:3000/api/v1/blog_posts/${this.$route.params.id}`, {\n                    headers: { Authorization: `Bearer ${this.userToken}` },\n                });\n                this.blogPost = response.data;\n                this.comments = response.data.comments;\n            } catch (error) {\n                console.error('Error fetching blog post:', error);\n            }\n        },\n        async addComment() {\n            try {\n                const response = await axios.post(\n                    'http://127.0.0.1:3000/api/v1/comments',\n                    {\n                        body: this.newComment,\n                        blog_post_id: this.blogPost.post.id,\n                    },\n                    { headers: { Authorization: `Bearer ${this.userToken}` } }\n                );\n                this.comments.push(response.data);\n                this.newComment = '';\n            } catch (error) {\n                console.error('Error adding comment:', error);\n            }\n        },\n        async addReply(parentId) {\n            try {\n                const response = await axios.post(\n                    'http://127.0.0.1:3000/api/v1/comments',\n                    {\n                        body: this.replyContent,\n                        parent_id: parentId,\n                        blog_post_id: this.blogPost.post.id,\n                    },\n                    { headers: { Authorization: `Bearer ${this.userToken}` } }\n                );\n                const parentComment = this.comments.find((comment) => comment.id === parentId);\n                parentComment.replies.push(response.data);\n                this.replyContent = '';\n            } catch (error) {\n                console.error('Error adding reply:', error);\n            }\n        },\n        async deleteComment(commentId) {\n            try {\n                await axios.delete(`http://127.0.0.1:3000/api/v1/comments/${commentId}`, {\n                    headers: { Authorization: `Bearer ${this.userToken}` },\n                });\n                this.comments = this.comments.filter((comment) => comment.id !== commentId);\n            } catch (error) {\n                console.error('Error deleting comment:', error);\n            }\n        },\n        isEditable(item) {\n            return item.user_id === this.user.id;\n        },\n    },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}