{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'BodyElement',\n  data() {\n    return {\n      blogPosts: []\n    };\n  },\n  created() {\n    this.fetchBlogPosts();\n  },\n  methods: {\n    async fetchBlogPosts() {\n      try {\n        const response = await axios.get('http://127.0.0.1:3000/api/v1/blog_posts', {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        });\n        this.blogPosts = response.data.blog_posts;\n        console.log('Blog posts:', this.blogPosts);\n      } catch (error) {\n        console.error('Error fetching blog posts:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","blogPosts","created","fetchBlogPosts","methods","response","get","headers","userToken","blog_posts","console","log","error"],"sources":["/Users/francium/app/frontend/src/components/blogpost/BodyElement.vue"],"sourcesContent":["<template>\n  <div class=\"blog-container\"  >\n    <div class=\"blog-card\" v-for=\"(post, index) in blogPosts\" :key=\"index\">\n        <img :src=\"post.image_url\" :alt=\"post.title\" class=\"blog-image\">\n        <div class=\"blog-content\">\n          \n          <h3 class=\"blog-title\">{{ post.title }}</h3>\n          <p class=\"blog-author\">{{post.user.firstname }} {{ post.user.lastname }}</p>\n          <p class=\"blog-description\">{{ post.description }}</p>\n        </div>\n      </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'BodyElement',\n  data() {\n    return { \n      blogPosts: [],\n    };\n  },\n  created() {\n    this.fetchBlogPosts();\n  },\n  methods: {\n    async fetchBlogPosts() {\n      try {\n        const response = await axios.get('http://127.0.0.1:3000/api/v1/blog_posts',\n        {\n          headers: {\n            'Authorization': `Bearer ${this.userToken}`\n          }\n        }\n        );\n    \n        this.blogPosts = response.data.blog_posts;\n        console.log('Blog posts:', this.blogPosts);\n      } catch (error) {\n        console.error('Error fetching blog posts:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.blog-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  padding: 20px;\n}\n\n.blog-card {\n  background: #fff;\n  border: 1px solid #e0e0e0;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.blog-card:hover {\n  transform: translateY(-7px);\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);\n}\n\n.blog-image {\n  width: 100%;\n  height: 180px;\n  object-fit: cover;\n}\n\n.blog-content {\n  padding: 15px;\n}\n\n.blog-title {\n  font-size: 1.2em;\n  margin: 0 0 10px;\n  color: #333;\n}\n\n.blog-author {\n  font-size: 0.9em;\n  color: #666;\n  margin-bottom: 10px;\n}\n\n.blog-description {\n  font-size: 1em;\n  color: #555;\n}\n</style>"],"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,yCAAyC,EAC1E;UACEC,OAAO,EAAE;YACP,eAAe,EAAE,UAAU,IAAI,CAACC,SAAS;UAC3C;QACF,CACA,CAAC;QAED,IAAI,CAACP,SAAQ,GAAII,QAAQ,CAACL,IAAI,CAACS,UAAU;QACzCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACV,SAAS,CAAC;MAC5C,EAAE,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}